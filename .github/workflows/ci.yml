# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the development branch
  push:
    branches: [ premake-build ]
  pull_request:
    branches: [ premake-build ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-on-linux:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        configuration: [debug, release]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Install submodules
        run: git submodule update --init
    
      - name: Install deps
        run: sudo apt-get install libx11-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libglfw3-dev libgl1-mesa-dev libglu1-mesa-dev
      
      - name: Install GCC
        uses: egor-tensin/setup-gcc@v1
        with:
          version: 11
          platform: x64
      
      - name: Setup premake
        uses: abel0b/setup-premake@v2.1
        with:
          version: "5.0.0-beta1"
          
      - name: Generate gmake2 files
        run: premake5 gmake2
        
      - name: Build project
        if: ${{matrix.configuration}} == "Debug"
        run: make config=Debug
        
      - name: Build project
        if: ${{matrix.configuration}} == "Release"
        run: make config=Release
      
  build-on-macos:
    runs-on: macos-latest
    
    strategy:
      matrix:
        configuration: [Debug, Release]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Install submodules
        run: git submodule update --init
      
      - name: Setup premake
        uses: abel0b/setup-premake@v2.1
        with:
          version: "5.0.0-beta1"
          
      - name: Generate Xcode4 files
        run: premake5 xcode4
        
      - name: Build project
        uses: sersoft-gmbh/xcodebuild-action@v2
        with:
          workspace: NightlyEngine.xcworkspace
          scheme: NightlyEditor
          destination: platform=macOS
          action: build
          configuration: ${{matrix.configuration}}
        
  build-on-windows:
    runs-on: windows-latest
    
    strategy:
      matrix:
        configuration: [Debug, Release]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # Use MSVC
      - uses: ilammy/msvc-dev-cmd@v1
      
      - name: Install submodules
        run: git submodule update --init
      
      - name: Setup premake
        uses: abel0b/setup-premake@v2.1
        with:
          version: "5.0.0-beta1"
          
      - name: Setup msbuild
        uses: microsoft/setup-msbuild@v1.1
          
      - name: Generate Visual Studio 2022 files
        run: premake5 vs2022
        
      - name: Build project
        run: msbuild NightlyEngine.sln -m -property:Configuration=${{matrix.configuration}}
